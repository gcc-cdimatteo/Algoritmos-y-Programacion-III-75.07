@startuml
skinparam classAttributeIconSize 0


class MultipleChoice {
    - enunciado: Enunciado
    - respuestaCorrecta: RespuestaMultipleChoice
    + responder(List<RespuestaMultipleChoice>: respuestas): List<Integer>
}

interface TipoPuntaje{
    + {abstract}puntuar(List<Integer>: evaluacion): Integer
}

class TipoPuntajeClasico{
    - aciertosEsperados: Integer
    + puntuar(List<Integer>: evaluacion): Integer
}

class TipoPuntajePenalidad{
    + puntuar(List<Integer>: evaluacion): Integer
}

class TipoPuntajeParcial{
    + puntuar(List<Integer>: evaluacion): Integer
}

class VerdaderoFalso {
    - enunciado: Enunciado
    - respuestaCorrecta: RespuestaVerdaderoYFalso
    + responder(List<RespuestaVerdaderoYFalso>: respuestas): List<Integer>
}

class OrderedChoice {
    - enunciado: Enunciado
    - respuestaCorrecta: RespuestaOrderedChoice
    + responder(List<RespuestaOrderedChoice>: respuestas): List<Integer>
}

class GroupChoice {
    - enunciado: Enunciado
    - respuestaCorrecta: RespuestaGroupChoice
    + responder(List<RespuestaGroupChoice>: respuestas): List<Integer>
}

class Ronda{
    +asignarPuntajes(List<Integer>: puntajes)
}

class Jugador{
    - puntos: Integer
    + nombrar(String: nombre)
    + puntuar(Integer: puntos)
    + nombre(void): String
    + puntaje(void): Integer
    + usarMultiplicador(Integer: valor): Integer
}

class Multiplicador{
    - valor: Integer
    - usos: Integer
    + multiplicar(Integer: unPuntaje): Integer
}

'Ordenamiento De Cuadrados

'Herencia --|> cumple la relación 'es un'

'Asociacion --> un objeto guarda a otro

'Agregacion --o un objeto esta compuesto por otro pero no lo necesita para vivir
Jugador "2" -left-o Ronda
Multiplicador "3" -up-o Jugador
TipoPuntaje "1" -right-o MultipleChoice
TipoPuntaje "1" -left-o VerdaderoFalso

'Composicion --* un objeto es dueño de otro

'Dependencia ..> un objeto utiliza a otro porque lo recibe/devuelve

'Interfaces ..|> colección de declaraciones de métodos sin implemetnar
TipoPuntaje <|.down. TipoPuntajeClasico
TipoPuntaje <|.down. TipoPuntajePenalidad
TipoPuntaje <|.down. TipoPuntajeParcial

MultipleChoice -up[hidden]-> OrderedChoice
VerdaderoFalso -up[hidden]-> GroupChoice

@enduml