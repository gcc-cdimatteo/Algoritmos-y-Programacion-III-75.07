@startuml
skinparam classAttributeIconSize 0

'Define el criterio de comparación con otro jugador
class Jugador {
    - puntos: Double
}

'Interfaz gráfica
class Panel

'Administra el Juego
' --> Da de alta los jugadores
' --> Da de alta preguntas
' --> Instancia rondas
class AlgoKahoot

'Procesa los puntos por jugador según pregunta
class Pregunta

class Multiplicadores

class ExclusividadDePuntajes

'Asigna resultado final segun Pregunta por jugador
'Maneja mecánica de multiplicadores y exclusividad
class Ronda

'class Respuesta

'Ordenamiento De Cuadrados

'Herencia --|> cumple la relación 'es un'

'Asociacion --> un objeto guarda a otro
AlgoKahoot "1" --> "1..n" Pregunta

'Agregacion --o un objeto esta compuesto por otro pero no lo necesita para vivir
Jugador --o Multiplicadores
Jugador --o ExclusividadDePuntajes

'Composicion --* un objeto es dueño de otro
'Pregunta "1" --* "1..6" Respuesta
Ronda -right-* Pregunta

'Dependencia ..> un objeto utiliza a otro porque lo recibe/devuelve
Panel ..> AlgoKahoot
AlgoKahoot "1" ..> "1..n" Ronda
Pregunta ..> Jugador
Ronda "1" ..> "2" Jugador

'Interfaces ..|> colección de declaraciones de métodos sin implemetnar

@enduml